import type { RoutingOptions } from '@clerk/types';
import React from 'react';
import type { AvailableComponentCtx } from '../types';
type PortalProps<CtxType extends AvailableComponentCtx, PropsType = Omit<CtxType, 'componentName'>> = {
    node: HTMLDivElement;
    component: React.FunctionComponent<PropsType> | React.ComponentClass<PropsType, any>;
    props?: PropsType & RoutingOptions;
} & Pick<CtxType, 'componentName'>;
export declare class Portal<CtxType extends AvailableComponentCtx> extends React.PureComponent<PortalProps<CtxType>> {
    private elRef;
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): React.ReactPortal;
}
export {};
